{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3","program":"/home/agevi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","signature","--edition=2021","/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=2118f19756ae690d","-C","extra-filename=-2118f19756ae690d","--out-dir","/home/agevi/smartLandcoin/landCoinContract/target/rls/debug/deps","-L","dependency=/home/agevi/smartLandcoin/landCoinContract/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/agevi/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/agevi/smartLandcoin/landCoinContract/target/rls/debug/deps/libsignature-2118f19756ae690d.rmeta"},"prelude":{"crate_id":{"name":"signature","disambiguator":[10487147193440438571,0]},"crate_root":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src","external_crates":[{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}}],"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":0,"byte_end":9334,"line_start":1,"line_end":195,"column_start":1,"column_end":77}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":9281,"byte_end":9282,"line_start":195,"line_end":195,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":9293,"byte_end":9294,"line_start":195,"line_end":195,"column_start":36,"column_end":37},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":9307,"byte_end":9308,"line_start":195,"line_end":195,"column_start":50,"column_end":51},"alias_span":null,"name":"*","value":"Signature","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":9318,"byte_end":9319,"line_start":195,"line_end":195,"column_start":61,"column_end":62},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":9331,"byte_end":9332,"line_start":195,"line_end":195,"column_start":74,"column_end":75},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":0,"byte_end":9334,"line_start":1,"line_end":195,"column_start":1,"column_end":77},"name":"","qualname":"::","value":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":42},{"krate":0,"index":52},{"krate":0,"index":72},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":"# RustCrypto: Digital Signature Algorithms","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":286,"byte_end":309,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":310,"byte_end":373,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ # Design","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":375,"byte_end":387,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":388,"byte_end":391,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This crate provides a common set of traits for signing and verifying","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":392,"byte_end":464,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ digital signatures intended to be implemented by libraries which produce","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":465,"byte_end":541,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ or contain implementations of digital signature algorithms, and used by","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":542,"byte_end":617,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ libraries which want to produce or verify digital signatures while","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":618,"byte_end":688,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ generically supporting any compatible backend.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":689,"byte_end":739,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":740,"byte_end":743,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Goals","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":744,"byte_end":756,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":757,"byte_end":760,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The traits provided by this crate were designed with the following goals","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":761,"byte_end":837,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ in mind:","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":838,"byte_end":850,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":851,"byte_end":854,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - Provide an easy-to-use, misuse resistant API optimized for consumers","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":855,"byte_end":929,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/   (as opposed to implementers) of its traits.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":930,"byte_end":979,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/ - Support common type-safe wrappers around \"bag-of-bytes\" representations","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":980,"byte_end":1057,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/   which can be directly parsed from or written to the \"wire\".","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1058,"byte_end":1123,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ - Expose a trait/object-safe API where signers/verifiers spanning multiple","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1124,"byte_end":1202,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/   homogeneous provider implementations can be seamlessly leveraged together","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1203,"byte_end":1282,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/   in the same logical \"keyring\" so long as they operate on the same","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1283,"byte_end":1354,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/   underlying signature type.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1355,"byte_end":1387,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ - Allow one provider type to potentially implement support (including","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1388,"byte_end":1461,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/   being generic over) several signature types.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1462,"byte_end":1512,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/ - Keep signature algorithm customizations / \"knobs\" out-of-band from the","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1513,"byte_end":1589,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/   signing/verification APIs, ideally pushing such concerns into the type","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1590,"byte_end":1666,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/   system so that algorithm mismatches are caught as type errors.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1667,"byte_end":1735,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ - Opaque error type which minimizes information leaked from cryptographic","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1736,"byte_end":1813,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/   failures, as \"rich\" error types in these scenarios are often a source","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1814,"byte_end":1889,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/   of sidechannel information for attackers (e.g. [BB'06])","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1890,"byte_end":1951,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1952,"byte_end":1955,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [BB'06]: https://en.wikipedia.org/wiki/Daniel_Bleichenbacher","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":1956,"byte_end":2020,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2021,"byte_end":2024,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2025,"byte_end":2046,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ To accomplish the above goals, the [`Signer`] and [`Verifier`] traits","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2051,"byte_end":2124,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ provided by this are generic over a [`Signature`] return value, and use","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2125,"byte_end":2200,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ generic parameters rather than associated types. Notably, they use such","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2201,"byte_end":2276,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ a parameter for the return value, allowing it to be inferred by the type","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2277,"byte_end":2353,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ checker based on the desired signature type.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2354,"byte_end":2402,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2403,"byte_end":2406,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The [`Signature`] trait is bounded on `AsRef<[u8]>`, enforcing that","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2407,"byte_end":2478,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ signature types are thin wrappers around a \"bag-of-bytes\"","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2479,"byte_end":2540,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/ serialization. Inspiration for this approach comes from the Ed25519","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2541,"byte_end":2612,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ signature system, which was based on the observation that past","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2613,"byte_end":2679,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ systems were not prescriptive about how signatures should be represented","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2680,"byte_end":2756,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ on-the-wire, and that lead to a proliferation of different wire formats","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2757,"byte_end":2832,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ and confusion about which ones should be used. This crate aims to provide","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2833,"byte_end":2910,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ similar simplicity by minimizing the number of steps involved to obtain","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2911,"byte_end":2986,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ a serializable signature.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":2987,"byte_end":3016,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3017,"byte_end":3020,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Alternatives considered","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3021,"byte_end":3051,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3052,"byte_end":3055,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This crate is based on over two years of exploration of how to encapsulate","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3056,"byte_end":3134,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ digital signature systems in the most flexible, developer-friendly way.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3135,"byte_end":3210,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ During that time many design alternatives were explored, tradeoffs","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3211,"byte_end":3281,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ compared, and ultimately the provided API was selected.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3282,"byte_end":3341,"line_start":66,"line_end":66,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3342,"byte_end":3345,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The tradeoffs made in this API have all been to improve simplicity,","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3346,"byte_end":3417,"line_start":68,"line_end":68,"column_start":1,"column_end":72}},{"value":"/ ergonomics, type safety, and flexibility for *consumers* of the traits.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3418,"byte_end":3493,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ At times, this has come at a cost to implementers. Below are some concerns","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3494,"byte_end":3572,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ we are cognizant of which were considered in the design of the API:","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3573,"byte_end":3644,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3645,"byte_end":3648,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ - \"Bag-of-bytes\" serialization precludes signature providers from using","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3649,"byte_end":3724,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/   their own internal representation of a signature, which can be helpful","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3725,"byte_end":3801,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/   for many reasons (e.g. advanced signature system features like batch","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3802,"byte_end":3876,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/   verification). Alternatively each provider could define its own signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3877,"byte_end":3956,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/   type, using a marker trait to identify the particular signature algorithm,","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":3957,"byte_end":4037,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/   have `From` impls for converting to/from `[u8; N]`, and a marker trait","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4038,"byte_end":4114,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   for identifying a specific signature algorithm.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4115,"byte_end":4168,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/ - Associated types, rather than generic parameters of traits, could allow","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4169,"byte_end":4246,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/   more customization of the types used by a particular signature system,","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4247,"byte_end":4323,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/   e.g. using custom error types.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4324,"byte_end":4360,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4361,"byte_end":4364,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ It may still make sense to continue to explore the above tradeoffs, but","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4365,"byte_end":4440,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/ with a *new* set of traits which are intended to be implementor-friendly,","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4441,"byte_end":4518,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ rather than consumer friendly. The existing [`Signer`] and [`Verifier`]","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4519,"byte_end":4594,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ traits could have blanket impls for the \"provider-friendly\" traits.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4595,"byte_end":4666,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/ However, as noted above this is a design space easily explored after","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4667,"byte_end":4739,"line_start":88,"line_end":88,"column_start":1,"column_end":73}},{"value":"/ stabilizing the consumer-oriented traits, and thus we consider these","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4740,"byte_end":4812,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/ more important.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4813,"byte_end":4832,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4833,"byte_end":4836,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ That said, below are some caveats of trying to design such traits, and","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4837,"byte_end":4911,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ why we haven't actively pursued them:","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4912,"byte_end":4953,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4954,"byte_end":4957,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ - Generics in the return position are already used to select which trait","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":4958,"byte_end":5034,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/   impl to use, i.e. for a particular signature algorithm/system. Avoiding","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5035,"byte_end":5112,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/   a unified, concrete signature type adds another dimension to complexity","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5113,"byte_end":5190,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/   and compiler errors, and in our experience makes them unsuitable for this","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5191,"byte_end":5270,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/   sort of API. We believe such an API is the natural one for signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5271,"byte_end":5345,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/   systems, reflecting the natural way they are written absent a trait.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5346,"byte_end":5420,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ - Associated types preclude multiple (or generic) implementations of the","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5421,"byte_end":5497,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/   same trait. These parameters are common in signature systems, notably","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5498,"byte_end":5573,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/   ones which support different digest algorithms.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5574,"byte_end":5627,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/ - Digital signatures are almost always larger than the present 32-entry","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5628,"byte_end":5703,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/   trait impl limitation on array types, which complicates trait signatures","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5704,"byte_end":5782,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/   for these types (particularly things like `From` or `Borrow` bounds).","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5783,"byte_end":5858,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/   This may be more interesting to explore after const generics.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5859,"byte_end":5926,"line_start":107,"line_end":107,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5927,"byte_end":5930,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Unstable features","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5931,"byte_end":5955,"line_start":109,"line_end":109,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5956,"byte_end":5959,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Despite being post-1.0, this crate includes a number of off-by-default","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":5960,"byte_end":6034,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ unstable features named `*-preview`, each of which depends on a pre-1.0","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6035,"byte_end":6110,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ crate.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6111,"byte_end":6121,"line_start":113,"line_end":113,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6122,"byte_end":6125,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These features are considered exempt from SemVer. See the","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6126,"byte_end":6187,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/ [SemVer policy](#semver-policy) above for more information.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6188,"byte_end":6251,"line_start":116,"line_end":116,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6252,"byte_end":6255,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The following unstable features are presently supported:","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6256,"byte_end":6316,"line_start":118,"line_end":118,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6317,"byte_end":6320,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ - `derive-preview`: for implementers of signature systems using","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6321,"byte_end":6388,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/   [`DigestSigner`] and [`DigestVerifier`], the `derive-preview` feature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6389,"byte_end":6464,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/   can be used to derive [`Signer`] and [`Verifier`] traits which prehash","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6465,"byte_end":6541,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/   the input message using the [`PrehashSignature::Digest`] algorithm for","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6542,"byte_end":6618,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/   a given [`Signature`] type. When the `derive-preview` feature is enabled","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6619,"byte_end":6697,"line_start":124,"line_end":124,"column_start":1,"column_end":79}},{"value":"/   import the proc macros with `use signature::{Signer, Verifier}` and then","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6698,"byte_end":6776,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/   add a `derive(Signer)` or `derive(Verifier)` attribute to the given","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6777,"byte_end":6850,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/   digest signer/verifier type. Enabling this feature also enables `digest`","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6851,"byte_end":6929,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/   support (see immediately below).","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6930,"byte_end":6968,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/ - `digest-preview`: enables the [`DigestSigner`] and [`DigestVerifier`]","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":6969,"byte_end":7044,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/   traits which are based on the [`Digest`] trait from the [`digest`] crate.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7045,"byte_end":7124,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/   These traits are used for representing signature systems based on the","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7125,"byte_end":7200,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/   [Fiat-Shamir heuristic] which compute a random challenge value to sign","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7201,"byte_end":7277,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/   by computing a cryptographically secure digest of the input message.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7278,"byte_end":7352,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/ - `rand-preview`: enables the [`RandomizedSigner`] trait for signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7353,"byte_end":7427,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/   systems which rely on a cryptographically secure random number generator","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7428,"byte_end":7506,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/   for security.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7507,"byte_end":7526,"line_start":136,"line_end":136,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7527,"byte_end":7530,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ NOTE: the [`async-signature`] crate contains experimental `async` support","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7531,"byte_end":7608,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/ for [`Signer`] and [`DigestSigner`].","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7609,"byte_end":7649,"line_start":139,"line_end":139,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7650,"byte_end":7653,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`async-signature`]: https://docs.rs/async-signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7654,"byte_end":7710,"line_start":141,"line_end":141,"column_start":1,"column_end":57}},{"value":"/ [`digest`]: https://docs.rs/digest/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7711,"byte_end":7750,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ [`Digest`]: https://docs.rs/digest/latest/digest/trait.Digest.html","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7751,"byte_end":7821,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ [Fiat-Shamir heuristic]: https://en.wikipedia.org/wiki/Fiat%E2%80%93Shamir_heuristic","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/lib.rs","byte_start":7822,"byte_end":7910,"line_start":144,"line_end":144,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":19},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9537,"byte_end":9543,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9449,"byte_end":9465,"line_start":8,"line_end":8,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9466,"byte_end":9469,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A result with the `signature` crate's [`Error`] type.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9470,"byte_end":9527,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10113,"byte_end":10118,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"decl_id":null,"docs":" Signature errors.","sig":null,"attributes":[{"value":"/ Signature errors.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9582,"byte_end":9603,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9604,"byte_end":9607,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type is deliberately opaque as to avoid sidechannel leakage which","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9608,"byte_end":9682,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ could potentially be used recover signing private keys or forge signatures","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9683,"byte_end":9761,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ (e.g. [BB'06]).","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9762,"byte_end":9781,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9782,"byte_end":9785,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ When the `std` feature is enabled, it impls [`std::error::Error`] and","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9786,"byte_end":9859,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ supports an optional [`std::error::Error::source`], which can be used by","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9860,"byte_end":9936,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ things like remote signers (e.g. HSM, KMS) to report I/O or auth errors.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":9937,"byte_end":10013,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10014,"byte_end":10017,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [BB'06]: https://en.wikipedia.org/wiki/Daniel_Bleichenbacher","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10018,"byte_end":10082,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10462,"byte_end":10465,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new error with no associated source\n","sig":null,"attributes":[{"value":"/ Create a new error with no associated source","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10402,"byte_end":10450,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10961,"byte_end":10972,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"from_source","qualname":"<Error>::from_source","value":"pub fn from_source<impl Into<Box<dyn std::error::Error + Send + Sync + 'static>>: Into<Box<dyn\nstd::error::Error + Send + Sync +\n'static>>>(impl Into<Box<dyn std::error::Error + Send + Sync + 'static>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new error with an associated source.","sig":null,"attributes":[{"value":"/ Create a new error with an associated source.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10513,"byte_end":10562,"line_start":41,"line_end":41,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10567,"byte_end":10570,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** The \"source\" should **NOT** be used to propagate cryptographic","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10575,"byte_end":10651,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"/ errors e.g. signature parsing or verification errors. The intended use","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10656,"byte_end":10730,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ cases are for propagating errors related to external signers, e.g.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10735,"byte_end":10805,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ communication/authentication errors with HSMs, KMS, etc.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10810,"byte_end":10870,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10875,"byte_end":10898,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12661,"byte_end":12668,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Keypair","qualname":"::keypair::Keypair","value":"Keypair<S: Signature>: AsRef<Self::VerifyingKey>","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" Signing keypair with an associated verifying key.","sig":null,"attributes":[{"value":"/ Signing keypair with an associated verifying key.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12514,"byte_end":12567,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12568,"byte_end":12571,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This represents a type which holds both a signing key and a verifying key.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12572,"byte_end":12650,"line_start":7,"line_end":7,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12766,"byte_end":12778,"line_start":10,"line_end":10,"column_start":10,"column_end":22},"name":"VerifyingKey","qualname":"::keypair::Keypair::VerifyingKey","value":"type VerifyingKey;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Verifying key type for this keypair.\n","sig":null,"attributes":[{"value":"/ Verifying key type for this keypair.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12716,"byte_end":12756,"line_start":9,"line_end":9,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12907,"byte_end":12920,"line_start":14,"line_end":14,"column_start":8,"column_end":21},"name":"verifying_key","qualname":"::keypair::Keypair::verifying_key","value":"pub fn verifying_key(&Self) -> &Self::VerifyingKey","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Get the verifying key which can verify signatures produced by the\n signing key portion of this keypair.\n","sig":null,"attributes":[{"value":"/ Get the verifying key which can verify signatures produced by the","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12785,"byte_end":12854,"line_start":12,"line_end":12,"column_start":5,"column_end":74}},{"value":"/ signing key portion of this keypair.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12859,"byte_end":12899,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14466,"byte_end":14475,"line_start":35,"line_end":35,"column_start":11,"column_end":20},"name":"Signature","qualname":"::signature::Signature","value":"Signature: AsRef<[u8]> + Debug + Sized","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Trait impl'd by concrete types that represent digital signatures.","sig":null,"attributes":[{"value":"/ Trait impl'd by concrete types that represent digital signatures.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13243,"byte_end":13312,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13313,"byte_end":13316,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Signature types *must* (as mandated by the `AsRef<[u8]>` bound) be a thin","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13317,"byte_end":13394,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ wrapper around the \"bag-of-bytes\" serialized form of a signature which can","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13395,"byte_end":13473,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ be directly parsed from or written to the \"wire\".","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13474,"byte_end":13527,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13528,"byte_end":13531,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Inspiration for this approach comes from the Ed25519 signature system,","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13532,"byte_end":13606,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ which adopted it based on the observation that past signature systems","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13607,"byte_end":13680,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ were not prescriptive about how signatures should be represented","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13681,"byte_end":13749,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ on-the-wire, and that lead to a proliferation of different wire formats and","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13750,"byte_end":13829,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ confusion about which ones should be used.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13830,"byte_end":13876,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13877,"byte_end":13880,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Signature`] trait aims to provide similar simplicity by minimizing","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13881,"byte_end":13957,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ the number of steps involved to obtain a serializable signature and","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":13958,"byte_end":14029,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ ideally ensuring there is one signature type for any given signature system","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14030,"byte_end":14109,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ shared by all \"provider\" crates.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14110,"byte_end":14146,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14147,"byte_end":14150,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ For signature systems which require a more advanced internal representation","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14151,"byte_end":14230,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ (e.g. involving decoded scalars or decompressed elliptic curve points) it's","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14231,"byte_end":14310,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ recommended that \"provider\" libraries maintain their own internal signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14311,"byte_end":14390,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ type and use `From` bounds to provide automatic conversions.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14391,"byte_end":14455,"line_start":34,"line_end":34,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14569,"byte_end":14579,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::signature::Signature::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Parse a signature from its byte representation\n","sig":null,"attributes":[{"value":"/ Parse a signature from its byte representation","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14511,"byte_end":14561,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14705,"byte_end":14713,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::signature::Signature::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Borrow a byte slice representing the serialized form of this signature\n","sig":null,"attributes":[{"value":"/ Borrow a byte slice representing the serialized form of this signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14623,"byte_end":14697,"line_start":39,"line_end":39,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16130,"byte_end":16136,"line_start":13,"line_end":13,"column_start":11,"column_end":17},"name":"Signer","qualname":"::signer::Signer","value":"Signer<S: Signature>","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" Sign the provided message bytestring using `Self` (e.g. a cryptographic key\n or connection to an HSM), returning a digital signature.\n","sig":null,"attributes":[{"value":"/ Sign the provided message bytestring using `Self` (e.g. a cryptographic key","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":15979,"byte_end":16058,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ or connection to an HSM), returning a digital signature.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16059,"byte_end":16119,"line_start":12,"line_end":12,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16222,"byte_end":16226,"line_start":15,"line_end":15,"column_start":8,"column_end":12},"name":"sign","qualname":"::signer::Signer::sign","value":"pub fn sign(&Self, &[u8]) -> S","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Sign the given message and return a digital signature\n","sig":null,"attributes":[{"value":"/ Sign the given message and return a digital signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16157,"byte_end":16214,"line_start":14,"line_end":14,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16624,"byte_end":16632,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"try_sign","qualname":"::signer::Signer::try_sign","value":"pub fn try_sign(&Self, &[u8]) -> Result<S, Error>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Attempt to sign the given message, returning a digital signature on\n success, or an error if something went wrong.","sig":null,"attributes":[{"value":"/ Attempt to sign the given message, returning a digital signature on","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16328,"byte_end":16399,"line_start":19,"line_end":19,"column_start":5,"column_end":76}},{"value":"/ success, or an error if something went wrong.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16404,"byte_end":16453,"line_start":20,"line_end":20,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16458,"byte_end":16461,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The main intended use case for signing errors is when communicating","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16466,"byte_end":16537,"line_start":22,"line_end":22,"column_start":5,"column_end":76}},{"value":"/ with external signers, e.g. cloud KMS, HSMs, or other hardware tokens.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16542,"byte_end":16616,"line_start":23,"line_end":23,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16819,"byte_end":16828,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"SignerMut","qualname":"::signer::SignerMut","value":"SignerMut<S: Signature>","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Sign the provided message bytestring using `&mut Self` (e.g., an evolving\n cryptographic key), returning a digital signature.\n","sig":null,"attributes":[{"value":"/ Sign the provided message bytestring using `&mut Self` (e.g., an evolving","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16676,"byte_end":16753,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ cryptographic key), returning a digital signature.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16754,"byte_end":16808,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16933,"byte_end":16937,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"sign","qualname":"::signer::SignerMut::sign","value":"pub fn sign(&mut Self, &[u8]) -> S","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Sign the given message, update the state, and return a digital signature\n","sig":null,"attributes":[{"value":"/ Sign the given message, update the state, and return a digital signature","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":16849,"byte_end":16925,"line_start":30,"line_end":30,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17318,"byte_end":17326,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"try_sign","qualname":"::signer::SignerMut::try_sign","value":"pub fn try_sign(&mut Self, &[u8]) -> Result<S, Error>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Attempt to sign the given message, updating the state, and returning a\n digital signature on success, or an error if something went wrong.","sig":null,"attributes":[{"value":"/ Attempt to sign the given message, updating the state, and returning a","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17043,"byte_end":17117,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ digital signature on success, or an error if something went wrong.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17122,"byte_end":17192,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17197,"byte_end":17200,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Signing can fail, e.g., if the number of time periods allowed by the","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17205,"byte_end":17277,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ current key is exceeded.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17282,"byte_end":17310,"line_start":39,"line_end":39,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":80},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/verifier.rs","byte_start":21277,"byte_end":21285,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Verifier","qualname":"::verifier::Verifier","value":"Verifier<S: Signature>","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" Verify the provided message bytestring using `Self` (e.g. a public key)\n","sig":null,"attributes":[{"value":"/ Verify the provided message bytestring using `Self` (e.g. a public key)","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/verifier.rs","byte_start":21191,"byte_end":21266,"line_start":8,"line_end":8,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/verifier.rs","byte_start":21500,"byte_end":21506,"line_start":14,"line_end":14,"column_start":8,"column_end":14},"name":"verify","qualname":"::verifier::Verifier::verify","value":"pub fn verify(&Self, &[u8], &S) -> Result<(), Error>","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Use `Self` to verify that the provided signature for a given message\n bytestring is authentic.","sig":null,"attributes":[{"value":"/ Use `Self` to verify that the provided signature for a given message","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/verifier.rs","byte_start":21306,"byte_end":21378,"line_start":10,"line_end":10,"column_start":5,"column_end":77}},{"value":"/ bytestring is authentic.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/verifier.rs","byte_start":21383,"byte_end":21411,"line_start":11,"line_end":11,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/verifier.rs","byte_start":21416,"byte_end":21419,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ Returns `Error` if it is inauthentic, or otherwise returns `()`.","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/verifier.rs","byte_start":21424,"byte_end":21492,"line_start":13,"line_end":13,"column_start":5,"column_end":73}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10390,"byte_end":10395,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":11185,"byte_end":11190,"line_start":59,"line_end":59,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":11687,"byte_end":11692,"line_start":79,"line_end":79,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":12074,"byte_end":12079,"line_start":95,"line_end":95,"column_start":67,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":12259,"byte_end":12264,"line_start":102,"line_end":102,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17452,"byte_end":17453,"line_start":44,"line_end":44,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":10390,"byte_end":10395,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":11185,"byte_end":11190,"line_start":59,"line_end":59,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":11687,"byte_end":11692,"line_start":79,"line_end":79,"column_start":18,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":12074,"byte_end":12079,"line_start":95,"line_end":95,"column_start":67,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/error.rs","byte_start":12259,"byte_end":12264,"line_start":102,"line_end":102,"column_start":28,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":89},"to":{"krate":4,"index":2546}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/keypair.rs","byte_start":12684,"byte_end":12689,"line_start":8,"line_end":8,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":2954},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14477,"byte_end":14482,"line_start":35,"line_end":35,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2954},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14491,"byte_end":14496,"line_start":35,"line_end":35,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":9678},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signature.rs","byte_start":14499,"byte_end":14504,"line_start":35,"line_end":35,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/agevi/.cargo/registry/src/github.com-1ecc6299db9ec823/signature-1.6.3/src/signer.rs","byte_start":17452,"byte_end":17453,"line_start":44,"line_end":44,"column_start":29,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":69},"to":{"krate":0,"index":64}}]}